
server:
  port: 8081 # Or any other port

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:h2:mem:orderdb;DB_CLOSE_DELAY=-1 # Use a real database URL in production
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect # Or your database dialect
    hibernate:
      ddl-auto: create-drop #  Use "validate" in production!
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  # Retry configuration
  retry:
    max-attempts: 5
    backoff:
      delay: 1000 # Initial delay in milliseconds
      max-delay: 5000 # Maximum delay
      multiplier: 2 # Multiplier for exponential backoff
  #RestTemplate
  web:
    client:
      max-idletime: 10s
      connect-timeout: 5s
      read-timeout: 5s
  # OpenTelemetry Configuration (Optional)
  otel:
    exporter:
      otlp:
        endpoint: http://localhost:4318 #  OTLP endpoint
    resource:
      attributes:
        service.name: service-a
        service.version: 0.0.1
management:
  endpoints:
    web:
      exposure:
        include: health, prometheus # Expose health and metrics endpoints


service-b:
  url: http://localhost:8082 # URL of the service B